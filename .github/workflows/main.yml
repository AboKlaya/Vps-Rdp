name: CI

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract
      run: Expand-Archive ngrok.zip

    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0

    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1

    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Start ngrok in background job
      run: |
        Start-Job { .\ngrok\ngrok.exe tcp 3389 } | Out-Null
        Start-Sleep -Seconds 8

    - name: Show ngrok tunnel info
      run: |
        $maxAttempts = 10
        $attempt = 0
        do {
          try {
            $response = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
            $tcp = $response.tunnels | Where-Object { $_.proto -eq "tcp" }
            Write-Host "`nNgrok TCP Address: $($tcp.public_url)`n"
            break
          } catch {
            Start-Sleep -Seconds 2
            $attempt++
          }
        } while ($attempt -lt $maxAttempts)
